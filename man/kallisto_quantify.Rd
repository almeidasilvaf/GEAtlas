% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/05_02_quantification_kallisto.R
\name{kallisto_quantify}
\alias{kallisto_quantify}
\title{Quantify expression with kallisto}
\usage{
kallisto_quantify(
  sample_info = NULL,
  fastqc_table = NULL,
  filtdir = "results/03_filtered_FASTQ",
  kallistoindex = "results/05_quantification/kallisto/idx",
  kallistodir = "results/05_quantification/kallisto",
  threads = NULL,
  envname = NULL,
  miniconda_path = NULL
)
}
\arguments{
\item{sample_info}{Data frame of sample metadata created with the
functions \code{create_sample_info} and \code{infer_strandedness}.
The function \code{infer_strandedness} adds a column named "Orientation"
with library strandedness information, which is mandatory for
kallisto quantification.}

\item{fastqc_table}{Data frame of summary statistics for FastQC as returned
by \code{multiqc()}.}

\item{filtdir}{Path to the directory where filtered reads are stored.
Default: results/03_filtered_FASTQ.}

\item{kallistoindex}{Directory where kallisto index file will be stored.
Default: results/05_quantification/kallisto/idx.}

\item{kallistodir}{Directory where quantification files will be stored.
Default: results/05_quantification/kallisto.}

\item{threads}{Number of threads for kallisto quant.}

\item{envname}{Name of the Conda environment with external dependencies
to be included in the temporary R environment.}

\item{miniconda_path}{Path to miniconda. Only valid if envname is specified.}
}
\value{
A 2-column data frame with BioSample IDs in the first column and
quantification status in the second column, with "OK" if kallisto
successfully quantified expression for a given BioSample, and NA otherwise.
}
\description{
Quantify expression with kallisto
}
\examples{
data(sample_info)
data(fastqc_table)
filtdir <- system.file("extdata", package = "bears")
kallistoindex <- file.path(tempdir(), "transcripts.idx")
kallistodir <- tempdir()
transcriptome_path <- system.file(
     "extdata", "Hsapiens_GRCh37.75_subset_transcripts.fa", package="bears"
)
if(kallisto_is_installed()) {
    kallisto_index(kallistoindex, transcriptome_path)
    kallisto_quantify(sample_info, fastqc_table, filtdir, kallistoindex,
                      kallistodir)
}
}
